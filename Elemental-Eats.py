{"pythonAssets":{"script":[{"Game":{"type":"game script","start":"set_room(\"Store\")","loop":""}},{"Pointer":{"type":"object script","start":"#Pointer start\n\nself.sprite = sprite(\"pointer.png\")\n\nself.x = mouse_x()\nself.y = mouse_y()\nself.z = -2\n","loop":"#Pointer loop\n\nself.x = mouse_x()\nself.y = mouse_y()"}},{"MainFolder":[{"Player":{"type":"object script","start":"#Player start\n\nself.sprite = sprite(\"chefFrontIdle.png\")\n\"\"\"\nfront = sprite(\"chefFrontWalk.png\", 1, 2)\nself.front = new_animation(front, 2, 0, 1)\n\nback = sprite(\"chefBackWalk.png\", 1, 2)\nself.back = new_animation(back, 4, 0, 1)\n\nright = sprite(\"chefRightWalk.png\", 1, 2)\nself.right = new_animation(right, 4, 0, 1)\n\"\"\"\n\nself.scaleX = 0.05\nself.scaleY = 0.05\nself.x = -550\n#self.y = -80\nself.y = 300\n\nself.facingRight = False\nself.facingLeft = False\nself.facingUp = False\nself.facingDown = True\n\nself.died = False\nself.timer = 0\n\nself.quiz = False\nself.recipe = False\n\nself.topBound = 520\nself.bottomBound = -600\nself.leftBound = -100\nself.rightBound = 2170","loop":"#Player loop\ncollect = get_collision(self, \"Ingredient\")\nwall = get_collision(self, \"Wall\")\naisle = get_collision(self, \"Aisle\")\nenemy = get_collision(self, \"Cart\")\nenemyChef = get_collision(self, \"Enemy\")\n\nif not self.recipe:\n    if not self.quiz:\n        if not self.died:\n            if key_is_pressed(\"d\"):\n                #set_animation(self, self.right)\n                self.sprite = sprite(\"chefRightIdle.png\")\n                #self.scaleX = 0.1\n                #self.scaleY = 0.1\n                self.scaleX = 0.05\n\n                self.x += 8\n\n                self.facingRight = True\n                self.facingLeft = False\n                self.facingUp = False\n                self.facingDown = False\n\n                if wall and self.x < wall.x - 20:\n                    self.x -= 8\n\n                if aisle and self.x < aisle.x - 50:\n                    self.x -= 8\n\n            if key_is_pressed(\"a\"):\n                #set_animation(self, self.right)\n                self.sprite = sprite(\"chefRightIdle.png\")\n                #self.scaleX = -0.1\n                #self.scaleY = 0.1\n                self.scaleX = -0.05\n\n                self.x -= 8\n\n                self.facingRight = False\n                self.facingLeft = True  \n                self.facingUp = False\n                self.facingDown = False\n\n                if wall and self.x > wall.x + 20:\n                    self.x += 8\n\n                if aisle and self.x > aisle.x + 50:\n                    self.x += 8\n\n            if key_is_pressed(\"w\"):\n                #set_animation(self, self.back)\n                self.sprite = sprite(\"chefBackIdle.png\")\n                #self.scaleX = 0.1\n                #self.scaleY = 0.1\n                self.scaleX = 0.05\n\n                self.y += 8\n                self.facingRight = False\n                self.facingLeft = False  \n                self.facingUp = True\n                self.facingDown = False\n\n                if wall and self.y < wall.y - 50:\n                    self.y -= 8\n\n                if aisle and self.y < aisle.y - 20:\n                    self.y -= 8\n\n            if key_is_pressed(\"s\"):\n                #set_animation(self, self.front)\n                self.sprite = sprite(\"chefFrontIdle.png\")\n                #self.scaleX = 0.1\n                #self.scaleY = 0.1\n                self.scaleX = 0.05\n\n                self.y -= 8\n\n                self.facingRight = False\n                self.facingLeft = False  \n                self.facingUp = False\n                self.facingDown = True\n\n                if wall and self.y > wall.y + 50:\n                    self.y += 8\n\n                if aisle and self.y > aisle.y - 20:\n                    self.y += 8\n\nif key_was_released(\"a\"):\n    self.sprite = sprite(\"chefRightIdle.png\")\n    self.scaleX = -0.05\n    self.scaleY = 0.05\n\nif key_was_released(\"d\"):\n    self.sprite = sprite(\"chefRightIdle.png\")\n    self.scaleX = 0.05\n    self.scaleY = 0.05\n\nif key_was_released(\"w\"):\n    self.sprite = sprite(\"chefBackIdle.png\")\n    self.scaleX = 0.05\n    self.scaleY = 0.05\n\nif key_was_released(\"s\"):\n    self.sprite = sprite(\"chefFrontIdle.png\")\n    self.scaleX = 0.05\n    self.scaleY = 0.05\n\n\nif enemy and enemy.moving:\n        self.died = True\n\nif enemyChef:\n    self.died = True\n\nif self.x >= self.topBound:\n    self.x = self.topBound\nif self.x <= self.bottomBound:\n    self.x = self.bottomBound\n\nif self.y <= self.leftBound:\n    self.y = self.leftBound\nif self.y >= self.rightBound:\n    self.y = self.rightBound\n"}},{"Mizzie":{"type":"object script","start":"#Mizzie start\n\nself.sprite = sprite(\"mizzieMice.png\")\n\nself.scaleX = 0.5\nself.scaleY = 0.5\n\nself.y = -80\n\nself.scaleX = 0.5\nself.scaleY = 0.5","loop":"#Mizzie loop\n\n"}},{"Btn":{"type":"object script","start":"#StartBtn start\n\nself.y = -200\n\nself.timer = 0\nself.clicked = False\n\nself.done = False\n\nself.startbtn = False\nself.skipbtn = False\nself.nextbtn = False\nself.cookbtn = False\nself.refundbtn = False\n\nself.scaleX = 0.5\nself.scaleY = 0.5","loop":"#StartBtn loop\n\nbtn = get_collision(self, \"Pointer\")\n\nif not self.done:\n    if mouse_was_pressed(\"left\") and btn:\n        sound = new_sound(\"pressed.mp3\")\n        play_sound(sound)\n\n        if self.startbtn:\n            self.sprite = sprite(\"startBtnPressed.png\")\n        if self.skipbtn:\n            self.sprite = sprite(\"skipBtnPressed.png\")\n        if self.nextbtn:\n            self.sprite = sprite(\"nextBtnPressed.png\")\n        if self.cookbtn:\n            self.sprite = sprite(\"cookBtnPressed.png\")\n        if self.refundbtn:\n            self.sprite = sprite(\"refundBtnPressed.png\")\n\n        self.clicked = True\n\n    if self.clicked:\n        self.timer += 1\n\n    if self.timer >= 40:\n        if self.startbtn:\n            self.sprite = sprite(\"startBtn.png\")\n        if self.skipbtn:\n            self.sprite = sprite(\"skipBtn.png\")\n        if self.nextbtn:\n            self.sprite = sprite(\"nextBtn.png\")\n        if self.cookbtn:\n            self.sprite = sprite(\"cookBtn.png\")\n        if self.refundbtn:\n            self.sprite = sprite(\"refundBtn.png\")\n        self.timer = 0 \n        self.clicked = False\n        self.done = True\n"}},{"Bg":{"type":"object script","start":"#TitleBg start\n","loop":"#TitleBg loop\n\n"}}]},{"KitchenFolder":[{"TopBun":{"type":"object script","start":"#TopBun start\n\nself.sprite = sprite(\"topBun.png\")\nself.x = -500\nself.y = 300\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n","loop":"#TopBun loop\n\n"}},{"Lettuce":{"type":"object script","start":"#Lettuce start\n\nself.sprite = sprite(\"lettuce.png\")\nself.x = -500\nself.y = 200\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n\n","loop":"#Lettuce loop\n\n"}},{"Tomato":{"type":"object script","start":"#Tomato start\n\nself.sprite = sprite(\"tomatoUncut.png\")\nself.x = -500\nself.y = 100\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n","loop":"#Tomato loop\n\n"}},{"ChoppedTomato":{"type":"object script","start":"#ChoppedTomato start\n\nself.sprite = sprite(\"tomatoSliced.png\")\nself.x = -1000\nself.y = -1000\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n\n\nself.visible = False","loop":"#ChoppedTomato loop\n\n"}},{"Cheese":{"type":"object script","start":"#Cheese start\n\nself.sprite = sprite(\"cheese.png\")\nself.x = -500\nself.y = 0\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1","loop":"#Cheese loop\n\n"}},{"ChoppedCheese":{"type":"object script","start":"#ChoppedCheese start\n\nself.sprite = sprite(\"cheeseSliced.png\")\nself.x = -1000\nself.y = -1000\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n\n\nself.visible = False","loop":"#ChoppedCheese loop\n\n"}},{"CookedPatty":{"type":"object script","start":"#CookedPatty start\n\nself.sprite = sprite(\"patty.png\")\nself.x = -1000\nself.y = -1000\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n\n\nself.visible = False","loop":"#CookedPatty loop\n\n"}},{"Patty":{"type":"object script","start":"#Patty start\n\nself.sprite = sprite(\"pattyRaw.png\")\nself.x = -500\nself.y = -100\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n","loop":"#Patty loop\n\n"}},{"BottomBun":{"type":"object script","start":"#BottomBun start\n\nself.sprite = sprite(\"bottomBun.png\")\nself.x = -500\nself.y = -200\nself.z = -1\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n","loop":"#BottomBun loop\n\n"}},{"Plate":{"type":"object script","start":"#Plate start\n\nself.sprite = sprite(\"plate.png\")\nself.x = 530\nself.y = -90\nself.z = -1\n\nself.scaleX = 0.13\nself.scaleY = 0.13","loop":"#Plate loop\n\n"}},{"CuttingBoard":{"type":"object script","start":"#CuttingBoard start\n\nself.sprite = sprite(\"highlight.png\")\nself.x = 300\nself.y = 260\nself.z = -1\n\nself.scaleX = 0.15\nself.scaleY = 0.15","loop":"#CuttingBoard loop\n\n"}},{"Stove":{"type":"object script","start":"#Stove start\n\nself.sprite = sprite(\"highlight.png\")\nself.x = 390\nself.y = 260\nself.z = -1\n\nself.scaleX = 0.15\nself.scaleY = 0.15","loop":"#Stove loop\n\n"}},{"Cancel":{"type":"object script","start":"#X start\n\nself.sprite = sprite(\"cancelRecipe.png\")\nself.visible = False \n\nself.x = -290\nself.y = 300\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n","loop":"#X loop\n\n"}},{"BurgerRecipe":{"type":"object script","start":"#Burger start\n\nself.sprite = sprite(\"recipe.png\")\nself.visible = False \n\nself.scaleX = 0.01\nself.scaleY = 0.01","loop":"#Burger loop\n\n"}},{"Recipe":{"type":"object script","start":"#Recipe start\n\nself.sprite = sprite(\"recipeTiny.png\")\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n\nself.x = 170\nself.y = 270","loop":"#Recipe loop\n\n"}},{"Burger":{"type":"object script","start":"#Burger start\n\nself.sprite = sprite(\"burger.png\")\n\nself.scaleX = 0.15\nself.scaleY = 0.15\n\n\nself.visible = False","loop":"#Burger loop\n\n"}},{"Enemy":{"type":"object script","start":"#Cart start\n\nenemy = sprite(\"enemyMoving.png\", 1, 2)\nself.enemy = new_animation(enemy, 3, 0, 1)\nset_animation(self, self.enemy)\n\nself.y = -300\nself.x = -50\n\nself.scaleX = 0.07\nself.scaleY = 0.07\n\nself.moveUp = True\nself.speed = 5\n\n","loop":"#Cart loop\n\nif self.moveUp:\n    self.y += self.speed\nif self.moveUp == False:\n    self.y -= self.speed\n\nif self.y >= 300:\n    self.moveUp = False\n                \nif self.y <= -300:\n    self.moveUp = True"}},{"Detector":{"type":"object script","start":"#Detector start\n\nself.sprite = sprite(\"highlight.png\")\n\nself.scaleX = 0.15\nself.scaleY = 0.15\n","loop":"#Detector loop\n\n"}},{"Arrow":{"type":"object script","start":"#Arrow start\n\nself.sprite = sprite(\"arrow.png\")\n\nself.x = 400\nself.y = 340\n\nself.moveRight = True\nself.visible = False\n\nself.scaleX = 0.05\nself.scaleY = 0.05\n","loop":"#Arrow loop\n\nif self.moveRight:\n    self.x += 5\n\nif self.moveRight == False:\n    self.x -= 5\n\nif self.x >= 500:\n    self.moveRight = False\n\nif self.x <= 300:\n    self.moveRight = True"}},{"Range":{"type":"object script","start":"#Range start\n\nself.sprite = sprite(\"rangeScale.png\")\n\nself.x = 400\nself.y = 290\n\nself.scaleX = 0.15\nself.scaleY = 0.15\n\nself.visible = False\n\n","loop":"#Range loop\n\n"}},{"Timer":{"type":"object script","start":"#Timer start\n\nself.sprite = sprite(\"pattyEarly.png\")\n\nself.x = 420\nself.y = 280\n\nself.scaleX = 0.08\nself.scaleY = 0.08\n\n\nself.visible = False","loop":"#Timer loop\n\n"}}]},{"StoreFolder":[{"SmoothCamera":{"type":"object script","start":"#SmoothCamera start\n\n","loop":"#SmoothCamera loop\n\n\n"}},{"Ingredient":{"type":"object script","start":"#Ingredient start\n\nimport random \n\nself.spriteDict = {\n    1: \"rock.png\",\n    2: \"scale.png\",\n    3: \"bowl.png\",\n    4: \"fish.png\",\n    5: \"hammer.png\",\n    6: \"flame.png\",\n    7: \"ice.png\"\n}\n\nself.spriteChoice = 1\nself.sprite = sprite(self.spriteDict[self.spriteChoice])\n\nself.x = random.randint(-300, 300)\nself.y = random.randint(-80, 2150)\n\nself.scaleX = 0.1\nself.scaleY = 0.1\n\nself.died = False\n\nself.collected = False","loop":"#Ingredient loop\n\nif self.died:\n    self.alpha -= 0.07\n\n    if self.alpha <= 0:\n        destroy(self)\n\nimport random\n\nif get_collision(self, \"Wall\") or get_collision(self, \"Checkout\") or get_collision(self, \"Aisle\"):\n    self.x = random.randint(-300, 300)\n    self.y = random.randint(-80, 2150)\n\n\n"}},{"Explosion":{"type":"object script","start":"#Explosion start\n\nsprite_sheet = sprite(\"explosion.png\", 1, 4)\nexplode = new_animation(sprite_sheet, 10, 0, 3)\n\nset_animation(self, explode)\n\nself.scaleX = 0.4\nself.scaleY = 0.4","loop":"#Explosion loop\n\n"}},{"OrderBox":{"type":"object script","start":"#Order start\n\nimport random \n\nself.sprite = sprite(\"shoppingList.png\")\nself.scaleX = 0.4\nself.scaleY = 0.5\n\nself.items = {\n    \"rocks\": 0,\n    \"scales\": 0,\n    \"bowls\": 0,\n    \"fishes\": 0,\n    \"hammers\": 0,\n    \"flames\": 0,\n    \"ice\": 0\n}\n\nself.amounts = {\n    \"rocks\": 0,\n    \"scales\": 0,\n    \"bowls\": 0,\n    \"fishes\": 0,\n    \"hammers\": 0,\n    \"flames\": 0,\n    \"ice\": 0\n}\n\nself.amountsText  = \"SHOPPING LIST\\n\\n\\n\\n\"\nself.itemsText = \"\"\n\nfor item in self.items:\n    self.itemsText += str(self.items[item]) + \"\\n\\n\"\n\nfor amount in self.amounts:\n    self.amounts[amount] = random.randint(1, 8)\n    self.amountsText += \" /\" + str(self.amounts[amount]) + \" \" + amount + \"\\n\\n\"\n\nself.ingredients = new_text(self.itemsText, 0, 0)\nself.ingredients.fontFamily = \"monospace\"\n\nself.instructions = new_text(self.amountsText, 0, 0)\nself.instructions.fontFamily = \"monospace\"\n\nself.display = new_text(\"HEAD TO\\nCHECKOUT!\", self.x - 100, self.y + 33)\nself.display.visible = False\nself.display.fontFamily = \"monospace\"\nself.display.fontSize = 35\n\nself.checkout = False\n","loop":"#Order loop\n\nself.instructions.x = self.x - 100\nself.instructions.y = self.y + 230\n\nself.ingredients.x = self.instructions.x \nself.ingredients.y = self.instructions.y - 104\n\nself.display.x = self.x - 100\nself.display.y = self.y + 33\n\n"}},{"Checkout":{"type":"object script","start":"#Checkout start\n\nself.sprite = sprite(\"checkout.png\")\n\nself.x = -480\nself.y = 60\n\nself.scaleX = 0.2\nself.scaleY = 0.2","loop":"#Checkout loop\n\n"}},{"Spoon":{"type":"object script","start":"#Spoon start\n\nself.sprite = sprite(\"spoon.png\")\n\nself.distance = 0\n\nself.scaleX = 0.045\nself.scaleY = 0.045","loop":"#Spoon loop\n\n"}},{"Floor":{"type":"object script","start":"#Background start\n\nself.sprite = sprite(\"groceryFloor.png\")\n\nself.scaleX = 0.7\nself.scaleY = 0.7\n\nself.z = -2","loop":"#Background loop\n\n"}},{"Cart":{"type":"object script","start":"#Cart start\n\nimport random \n\nenemy = sprite(\"enemyMoving.png\", 1, 2)\nself.enemy = new_animation(enemy, 3, 0, 1)\nset_animation(self, self.enemy)\n\nself.x = -300\n\nself.scaleX = -0.07\nself.scaleY = 0.07\n\nself.moveRight = True\nself.speed = random.randint(2, 5)\n\nself.stunned = False\nself.timer = 0\n\nself.moving = True","loop":"#Cart loop\n\nstun = get_collision(self, \"Spoon\")\n\nif not self.stunned:\n    if self.moveRight == True:\n        self.x += self.speed\n    if self.moveRight == False:\n        self.x -= self.speed\n\n    if self.x >= 200:\n        self.moveRight = False\n        self.scaleX = 0.07\n        \n    if self.x <= -330:\n        self.moveRight = True\n        self.scaleX = -0.07\n\nif stun:\n    self.stunned = True\n\nif self.stunned:\n    self.moving = False\n    self.sprite = sprite(\"enemyIdle.png\")\n    if self.moveRight:\n        self.scaleX = -0.06\n    if not self.moveRight:\n        self.scaleX = 0.06\n\n    self.scaleY = 0.06\n    self.timer += 1\n\n    if self.timer >= 150:\n        self.moving = True\n        set_animation(self, self.enemy)\n        if self.moveRight:\n            self.scaleX = -0.07\n        if not self.moveRight:\n            self.scaleX = 0.07  \n\n        self.scaleY = 0.07\n        self.timer = 0\n        self.stunned = False\n            \n\n"}},{"Aisle":{"type":"object script","start":"#Aisle start\n\nimport random \n\nself.spriteDict = {\n    1: \"groceryWall1.png\",\n    2: \"groceryWall2.png\",\n    3: \"groceryWall3.png\",\n    4: \"groceryWall4.png\",\n    5: \"groceryWall5.png\"\n}\n\nself.spriteChoice = random.randint(1, 5)\nself.sprite = sprite(self.spriteDict[self.spriteChoice])\n\nself.x = -30\nself.y = 200\nself.z = 0\n\nself.scaleX = 0.17\nself.scaleY = 0.17\n\nif self.sprite == sprite(\"groceryWall1.png\"):\n    self.scaleX = 0.07 \n    self.scaleY = 0.07","loop":"#Aisle loop\n\n"}},{"Wall":{"type":"object script","start":"#Wall start\n\nself.sprite = sprite(\"groceryBorder.png\")\n\nself.x = -30\nself.y = -200\nself.z = -1\n\nself.scaleX = 0.5\nself.scaleY = 0.2","loop":"#Wall loop\n\n"}}]},{"DinnerFolder":[{"StrictPointer":{"type":"object script","start":"#StrictPointer start\n\nself.sprite = sprite(\"pointer.png\")\n\nself.scaleX = 2\nself.scaleY = 2","loop":"#StrictPointer loop\n\n"}},{"Quiz":{"type":"object script","start":"#Quiz start\n\nself.sprite = sprite(\"quiz.png\")\n\nself.scaleX = 1\nself.scaleY = 5\n\nself.angle = 90","loop":"#Quiz loop\n\n"}},{"Food":{"type":"object script","start":"#Food1 start\n\nimport random \n\nself.sprite = sprite(\"rocks.png\")\nself.x = -900\n\n# critic is going to be in the middle the entire level so the conveyer belt will be lower\nself.y = 0\n\n# speed range, 5 is the minimum speed and 10 is the max\nself.speed = random.randint(7, 8)\n\n# controls lose screen (see loop)\nself.clicked = False\nself.move1 = False\nself.move2 = False\nself.move3 = False\n\nself.rounds = 2\n\nself.erase = False\nself.erase1 = False\n\nself.missed = 0\n","loop":"#Food1 loop\n\nbutton3 = get_collision(game.mouse, 'Buttons3')\nbutton6 = get_collision(game.mouse, 'Buttons6')\n\n# can change 750 to further/closer, losing point\nif self.x >= 750 and self.clicked == False and self.sprite != sprite(\"Placement.png\"):\n    set_room(\"DinnerLose\")\n\nif self.move1:\n    self.x += self.speed\n\nif self.move2 and self.rounds == 2:\n    if self.erase:\n        button3.visible = False\n        self.erase = False\n    self.x += self.speed\n    \nif self.move3 and self.rounds == 3:\n    if self.erase1:\n        button6.visible = False\n        self.erase1 = False\n    self.x += self.speed\n\nif mouse_was_pressed(\"left\"):\n    if button3 and button3.visible:\n        self.move2 = True\n        self.erase = True\n    \n    if button6 and button6.visible:\n        self.move3 = True\n        self.erase1 = True"}},{"TriggerFood":{"type":"object script","start":"#TriggerFood1 start\n\nself.sprite = sprite(\"scales.png\")\n\nself.x = -7000\n\nself.click = False\nself.move = True\nself.move1 = False\nself.move2 = False","loop":"#TriggerFood1 loop\n\nif self.move:\n    self.x += 5\n\nif self.move1:\n    self.x += 9\n\nif self.move2:\n    self.x += 11\n\nif self.click:\n    self.sprite = sprite(\"enemy.png\")"}},{"Round1":[{"Buttons1":{"type":"object script","start":"#Buttons1 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = -200\nself.y = -100","loop":"#Buttons1 loop\n\n"}},{"Buttons2":{"type":"object script","start":"#Buttons2 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = 200\nself.y = -100","loop":"#Buttons2 loop\n\n"}},{"Buttons3":{"type":"object script","start":"#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = -200\nself.y = -200","loop":"#Buttons3 loop\n\n"}},{"Buttons4":{"type":"object script","start":"#Buttons4 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = 200\nself.y = -200","loop":"#Buttons4 loop\n\n"}}]},{"Round2":[{"Buttons5":{"type":"object script","start":"#Buttons start\n\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = -200\nself.y = -100","loop":"#Buttons loop\n\n"}},{"Buttons6":{"type":"object script","start":"#Buttons6 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = 200\nself.y = -100","loop":"#Buttons6 loop\n\n"}},{"Buttons7":{"type":"object script","start":"#Buttons7 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = -200\nself.y = -200","loop":"#Buttons7 loop\n\n"}},{"Buttons8":{"type":"object script","start":"#Buttons8 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = 200\nself.y = -200","loop":"#Buttons8 loop\n\n"}}]},{"Round3":[{"Buttons9":{"type":"object script","start":"#Buttons9 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = -200\nself.y = -100","loop":"#Buttons9 loop\n\n"}},{"Buttons10":{"type":"object script","start":"#Buttons10 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = 200\nself.y = -100","loop":"#Buttons10 loop\n\n"}},{"Buttons11":{"type":"object script","start":"#Buttons11 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = -200\nself.y = -200","loop":"#Buttons11 loop\n\n"}},{"Buttons12":{"type":"object script","start":"#Buttons12 start\n\n#Buttons3 start\n\nself.sprite = sprite(\"Button.png\")\n\nself.x = 200\nself.y = -200","loop":"#Buttons12 loop\n\n"}}]}]}],"room":[{"Main":[{"Title":{"type":"room script","start":"#Title start\n\nself.pointer = Pointer()\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"titleText.png\")\nself.bg.scaleX = 0.5\nself.bg.scaleY = 0.5\nself.bg.y = 50\nself.skip = False\n\nself.startbtn = Btn()\nself.startbtn.startbtn = True\nself.startbtn.sprite = sprite(\"startBtn.png\")","loop":"#Title loop\n\nif mouse_was_pressed(\"left\") and get_collision(self.startbtn, \"Pointer\"):\n    self.skip = True\n\nif self.skip:\n    self.bg.alpha -= 0.01\n    self.startbtn.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.bg.alpha <= 0:\n        set_room(\"StartScenes\")"}},{"StartScenes":{"type":"room script","start":"#StartScenes start\n\nset_camera(0, 0)\nself.pointer = Pointer()\nself.pointer.alpha = 0\n\nself.otherBg = Bg()\nself.otherBg.sprite = sprite(\"mizzieMice.png\")\nself.otherBg.alpha = 0\nself.otherBg.scaleX = 0.5\nself.otherBg.scaleY = 0.5\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"nextBg.png\")\nself.bg.alpha = 0\n\nself.start = False\nself.clicked = False\nself.returned = False\nself.skip = False\n\nself.skipbtn = Btn()\nself.skipbtn.x = -350\nself.skipbtn.alpha = 0\nself.skipbtn.skipbtn = True\nself.skipbtn.sprite = sprite(\"skipBtn.png\")\n\nself.cutscene = 0\n\nself.timer = 0\n\nself.nextbtn = Btn()\nself.nextbtn.x = 350\nself.nextbtn.alpha = 0\nself.nextbtn.nextbtn = True\nself.nextbtn.sprite = sprite(\"nextBtn.png\")\n\n","loop":"#StartScenes loop\n\nself.bg.alpha += 0.01\nself.nextbtn.alpha += 0.01\nself.skipbtn.alpha += 0.01\nself.pointer.alpha += 0.01\n\nif self.otherBg.alpha >= 1 and self.bg.alpha >= 1 and self.nextbtn.alpha >= 1 and self.pointer.alpha >= 1 and self.skipbtn.alpha >= 1 and not self.skip:\n    self.bg.alpha = 1\n    self.nextbtn.alpha = 1\n    self.skipbtn.alpha = 1\n    self.pointer.alpha = 1\n\n# Next Button\nnextButton = get_collision(self.nextbtn, \"Pointer\")\nskipButton = get_collision(self.skipbtn, \"Pointer\")\n\n# cutscene dict\ncutscenes = {\n    1: \"titleBg.png\",\n    2: \"nextBg.png\",\n    3: \"titleBg.png\",\n}\nif mouse_was_pressed('left') and skipButton:\n    self.skip = True\n\nself.nextbtn.done = False\n\n# click btn triggers next cutscene \nif mouse_was_pressed('left') and nextButton:\n    self.otherBg.alpha = 1\n\n    if self.cutscene == 3:\n        self.skip = True  \n\n    elif self.cutscene <= 3:\n        if not self.nextbtn.done:\n            self.cutscene += 1\n            self.clicked = True\n    \nif self.clicked:\n    self.bg.x -= 30\n\n    if self.bg.x <= -1500:\n        self.bg.x = 1500\n        self.bg.sprite = sprite(cutscenes[self.cutscene]) \n        self.returned = True\n\nif self.returned:\n    self.clicked = False\n\n    if self.bg.x >= 0:\n        self.bg.x -= 30\n\n    if self.bg.x == 0:\n        self.returned = False\n\nif self.skip:\n    self.otherBg.alpha -= 0.02\n    self.bg.alpha -= 0.02\n    self.nextbtn.alpha -= 0.02\n    self.skipbtn.alpha -= 0.02\n    self.pointer.alpha -= 0.02\n\n    if self.bg.alpha <= 0:\n        set_room(\"Menu1\")\n"}},{"Menu1":{"type":"room script","start":"#Menu2 start\n\n#Menu start\n\nself.pointer = Pointer()\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"restoEmpty.png\")\nself.bg.scaleX = 0.64\nself.bg.scaleY = 0.64\n\nself.bg1 = Bg()\nself.bg1.sprite = sprite(\"menu.png\")\nself.bg1.scaleX = 0.4\nself.bg1.scaleY = 0.4\n\nself.level1 = Btn()\nself.level1.y = 150\nself.level1.sprite = sprite(\"menuLevel1.png\")\nself.level1.scaleX = 0.4\nself.level1.scaleY = 0.4\n\nself.level2 = Btn()\nself.level2.y = self.level1.y - 200\nself.level2.done = True\nself.level2.sprite = sprite(\"menuLevel2.png\")\nself.level2.scaleX = 0.4\nself.level2.scaleY = 0.4\n\nself.level3 = Btn()\nself.level3.y = self.level2.y - 200\nself.level3.done = True\nself.level3.sprite = sprite(\"menuLevel3.png\")\nself.level3.scaleX = 0.4\nself.level3.scaleY = 0.4\n\nself.skip = False","loop":"#Menu2 loop\n\nif get_collision(self.level1, \"Pointer\"):\n    self.level1.sprite = sprite(\"menuLevel1Hover.png\")\nelse:\n    self.level1.sprite = sprite(\"menuLevel1.png\")\n\nif mouse_was_pressed(\"left\") and get_collision(self.level1, \"Pointer\"):\n    self.skip = True\n    self.level1.sprite = sprite(\"menuLevel1.png\")\n\nif self.skip:\n    self.bg1.alpha -= 0.01\n    self.level1.alpha -= 0.01\n    self.level2.alpha -= 0.01\n    self.level3.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.bg1.alpha <= 0:\n        set_room(\"KitchenOrder\")\n        self.skip = False"}},{"Menu2":{"type":"room script","start":"#Menu2 start\n\n#Menu start\n\nself.pointer = Pointer()\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"restoEmpty.png\")\nself.bg.scaleX = 0.64\nself.bg.scaleY = 0.64\n\nself.bg1 = Bg()\nself.bg1.sprite = sprite(\"menu.png\")\nself.bg1.scaleX = 0.4\nself.bg1.scaleY = 0.4\n\nself.level1 = Btn()\nself.level1.y = 150\nself.level1.done = True\nself.level1.sprite = sprite(\"menuLevel1.png\")\nself.level1.scaleX = 0.4\nself.level1.scaleY = 0.4\n\nself.level2 = Btn()\nself.level2.y = self.level1.y - 200\nself.level2.sprite = sprite(\"menuLevel2.png\")\nself.level2.scaleX = 0.4\nself.level2.scaleY = 0.4\n\nself.level3 = Btn()\nself.level3.y = self.level2.y - 200\nself.level3.done = True\nself.level3.sprite = sprite(\"menuLevel3.png\")\nself.level3.scaleX = 0.4\nself.level3.scaleY = 0.4\n\nself.skip = False","loop":"#Menu2 loop\n\nif get_collision(self.level2, \"Pointer\"):\n    self.level2.sprite = sprite(\"menuLevel2Hover.png\")\nelse:\n    self.level2.sprite = sprite(\"menuLevel2.png\")\n\nif mouse_was_pressed(\"left\") and get_collision(self.level2, \"Pointer\"):\n    self.skip = True\n    self.level2.sprite = sprite(\"menuLevel2.png\")\n\nif self.skip:\n    self.bg1.alpha -= 0.01\n    self.level1.alpha -= 0.01\n    self.level2.alpha -= 0.01\n    self.level3.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.bg1.alpha <= 0:\n        set_room(\"StoreOrder\")\n        self.skip = False"}},{"Menu3":{"type":"room script","start":"#Menu2 start\n\n#Menu start\n\nself.pointer = Pointer()\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"restoEmpty.png\")\nself.bg.scaleX = 0.64\nself.bg.scaleY = 0.64\n\nself.bg1 = Bg()\nself.bg1.sprite = sprite(\"menu.png\")\nself.bg1.scaleX = 0.4\nself.bg1.scaleY = 0.4\n\nself.level1 = Btn()\nself.level1.y = 150\nself.level1.done = True\nself.level1.sprite = sprite(\"menuLevel1.png\")\nself.level1.scaleX = 0.4\nself.level1.scaleY = 0.4\n\nself.level2 = Btn()\nself.level2.y = self.level1.y - 200\nself.level2.done = True\nself.level2.sprite = sprite(\"menuLevel2.png\")\nself.level2.scaleX = 0.4\nself.level2.scaleY = 0.4\n\nself.level3 = Btn()\nself.level3.y = self.level2.y - 200\nself.level3.sprite = sprite(\"menuLevel3.png\")\nself.level3.scaleX = 0.4\nself.level3.scaleY = 0.4\n\nself.skip = False","loop":"#Menu2 loop\n\nif get_collision(self.level3, \"Pointer\"):\n    self.level3.sprite = sprite(\"menuLevel3Hover.png\")\nelse:\n    self.level3.sprite = sprite(\"menuLevel3.png\")\n\nif mouse_was_pressed(\"left\") and get_collision(self.level3, \"Pointer\"):\n    self.skip = True\n    self.level3.sprite = sprite(\"menuLevel2.png\")\n\nif self.skip:\n    self.bg1.alpha -= 0.01\n    self.level1.alpha -= 0.01\n    self.level2.alpha -= 0.01\n    self.level3.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.bg1.alpha <= 0:\n        set_room(\"DinnerOrder\")\n        self.skip = False"}},{"EndScenes":{"type":"room script","start":"#StartScenes start\n\nset_camera(0, 0)\nself.pointer = Pointer()\nself.pointer.alpha = 0\n\nself.otherBg = Bg()\nself.otherBg.sprite = sprite(\"mizzeMice.png\")\nself.otherBg.alpha = 0\nself.otherBg.scaleX = 0.5\nself.otherBg.scaleY = 0.5\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"nextBg.png\")\nself.bg.alpha = 0\n\nself.start = False\nself.clicked = False\nself.returned = False\nself.skip = False\n\nself.skipbtn = Btn()\nself.skipbtn.x = -350\nself.skipbtn.alpha = 0\nself.skipbtn.skipbtn = True\nself.skipbtn.sprite = sprite(\"skipBtn.png\")\n\nself.cutscene = 0\n\nself.timer = 0\n\nself.nextbtn = Btn()\nself.nextbtn.x = 350\nself.nextbtn.alpha = 0\nself.nextbtn.nextbtn = True\nself.nextbtn.sprite = sprite(\"nextBtn.png\")\n\n","loop":"#EndScenes loop\n\n#StartScenes loop\n\nself.bg.alpha += 0.01\nself.nextbtn.alpha += 0.01\nself.skipbtn.alpha += 0.01\nself.pointer.alpha += 0.01\n\nif self.otherBg.alpha >= 1 and self.bg.alpha >= 1 and self.nextbtn.alpha >= 1 and self.pointer.alpha >= 1 and self.skipbtn.alpha >= 1 and not self.skip:\n    self.bg.alpha = 1\n    self.nextbtn.alpha = 1\n    self.skipbtn.alpha = 1\n    self.pointer.alpha = 1\n\n# Next Button\nnextButton = get_collision(self.nextbtn, \"Pointer\")\nskipButton = get_collision(self.skipbtn, \"Pointer\")\n\n# cutscene dict\ncutscenes = {\n    1: \"titleBg.png\",\n    2: \"nextBg.png\",\n    3: \"titleBg.png\",\n}\nif mouse_was_pressed('left') and skipButton:\n    self.skip = True\n\nself.nextbtn.done = False\n\n# click btn triggers next cutscene \nif mouse_was_pressed('left') and nextButton:\n    self.otherBg.alpha = 1\n\n    if self.cutscene == 3:\n        self.skip = True  \n\n    elif self.cutscene <= 3:\n        if not self.nextbtn.done:\n            self.cutscene += 1\n            self.clicked = True\n    \nif self.clicked:\n    self.bg.x -= 30\n\n    if self.bg.x <= -1500:\n        self.bg.x = 1500\n        self.bg.sprite = sprite(cutscenes[self.cutscene]) \n        self.returned = True\n\nif self.returned:\n    self.clicked = False\n\n    if self.bg.x >= 0:\n        self.bg.x -= 30\n\n    if self.bg.x == 0:\n        self.returned = False\n\nif self.skip:\n    self.otherBg.alpha -= 0.02\n    self.bg.alpha -= 0.02\n    self.nextbtn.alpha -= 0.02\n    self.skipbtn.alpha -= 0.02\n    self.pointer.alpha -= 0.02\n\n    if self.bg.alpha <= 0:\n        set_room(\"End\")\n"}},{"End":{"type":"room script","start":"#End start\n\nMizzie()\nset_camera(0,0)\ndisplay = new_text(\"UI\", 0, 0)\ndisplay.text = \"        BY MIZZIE MICE\\nTHANK YOU FOR PLAYING!\"\ndisplay.x = -270\ndisplay.y = 80\ndisplay.color = \"white\"\ndisplay.fontFamily = \"Comic Sans MS\"\ndisplay.fontSize = 40","loop":"#End loop\n\n"}}]},{"KitchenLevel1":[{"KitchenOrder":{"type":"room script","start":"#KitchenOrder start\n\nself.pointer = Pointer()\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"restoLevel1.png\")\n\nself.clicked = False\nself.skip = False\n\nself.cookbtn = Btn()\nself.cookbtn.x = 450\nself.cookbtn.y = -250\nself.cookbtn.cookbtn = True\nself.cookbtn.sprite = sprite(\"cookBtn.png\")\n\nself.cutscene = 0\nself.timer = 0\nself.nextTimer = 0\n","loop":"#KitchenOrder loop\n\n#Level1Earth loop\n\nnextbtn = get_collision(self.cookbtn, \"Pointer\")\n\n# cutscene dict\ncutscenes = {\n    1: \"nextBg.png\", \n    2: \"titleBg.png\"\n}\n\nself.cookbtn.done = False\n\n# click btn triggers next cutscene \nif mouse_was_pressed('left') and nextbtn:\n    if not self.cookbtn.done:\n        self.cutscene += 1\n        self.clicked = True\n\nif self.cutscene in cutscenes:\n    self.bg.sprite = sprite(cutscenes[self.cutscene]) \n\n# cutscene end triggers level1 \nif self.cutscene == 3: \n    self.skip = True\n\nif self.skip:\n    self.bg.alpha -= 0.01\n    self.cookbtn.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.bg.alpha <= 0:\n        set_room(\"Kitchen\")\n\n\n\n"}},{"Kitchen":{"type":"room script","start":"#Kitchen start\nset_camera(0, 0)\n\nself.expand = False\n\nself.pointer = Pointer()\n\nfloor = Floor()\n\nself.chosen = None\n\ncounter = Wall()\ncounter.scaleX = 0.3\ncounter.scaleY = 0.3\ncounter.x = 300\ncounter.y = 250\n\ncounter = Wall()\ncounter.scaleX = 0.3\ncounter.scaleY = 0.3\ncounter.x = 527\ncounter.y = -100\ncounter.angle = 90\n\nself.recipe = Recipe()\n\nself.plate = Plate()\nself.board = CuttingBoard()\n\nself.stove = Stove()\nself.cookingDisplay = Timer()\n\nself.detector = Detector()\nself.detector.z = -1\n\nself.enemy = Enemy()\nself.enemy.appear = True\n\nself.chef = Player()\nself.chef.rightBound = 250\nself.chef.leftBound = -250\nself.chef.bottomBound = -550\nself.chef.topBound = 550\n\nself.bottomBun = BottomBun()\nself.patty = Patty()\nself.cookedPatty = CookedPatty()\nself.cheese = Cheese()\nself.choppedCheese = ChoppedCheese()\nself.tomato = Tomato()\nself.choppedTomato = ChoppedTomato()\nself.lettuce = Lettuce()\nself.topBun = TopBun()\n\nself.burgerRecipe = BurgerRecipe()\nself.cancel = Cancel()\n\nself.timer = 15000\n\nself.pickUp = False\nself.putDown = False\nself.chopping = False\nself.cooking = False\nself.cookingTimer = 0\n\nself.ingredients = [\n    {\"item\": self.bottomBun, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.patty, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.cookedPatty, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.cheese, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.choppedCheese, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.tomato, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.choppedTomato, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.lettuce, \"pickUp\": False, \"putDown\": False},\n    {\"item\": self.topBun, \"pickUp\": False, \"putDown\": False}\n]\n\nself.timerText = new_text(\"Time: \" + str(int(self.timer / 100)), -600, -220)\nself.timerText.fontFamily = \"monospace\"\nself.timerText.color = \"white\"\nself.timerText.fontSize = 60\n\nself.wompwomp = new_text(\"WRONG ORDER! (check recipe)\", -600, -190)\nself.wompwomp.fontFamily = \"monospace\"\nself.wompwomp.color = \"red\"\nself.wompwomp.visible = False\n\nself.ranger = Range()\nself.arrow = Arrow()\nself.choppingTimer = 0\n\nself.burger = Burger()\nself.burgerTimer = 0\nself.win = False\nself.placed = True\n\nself.order = []\nself.order1 = [self.bottomBun, self.cookedPatty, self.choppedCheese, self.choppedTomato, self.lettuce, self.topBun]","loop":"#Kitchen loop\n\nself.timer -= 1.6\nself.timerText.text = \"Time: \" + str(int(self.timer / 100))\nif self.timer <= 1100:\n    self.timerText.color = \"red\"\n\nimport math \n\n# calculates distance between chef and pointer\nhorizontalDistance = self.pointer.x - self.chef.x\nverticalDistance = self.pointer.y - self.chef.y\n\n# finds angle between chef and pointer\nangle = math.atan2(verticalDistance, horizontalDistance)\n\n# places detector 100 units away from the chef in the direction of the angle\nself.detector.x = self.chef.x + 120 * math.cos(angle)\nself.detector.y = self.chef.y + 120 * math.sin(angle)\n\nif self.chopping:\n    self.choppingTimer += 1\n    self.arrow.visible = True\n    self.ranger.visible = True\n\n    if mouse_was_pressed(\"left\") and self.choppingTimer >= 30:\n        if self.arrow.x >= 380 and self.arrow.x <= 420:\n            if self.chosen == self.choppedCheese:\n                self.arrow.visible = False\n                self.ranger.visible = False\n                self.choppedCheese.visible = True\n                self.choppedCheese.x = self.cheese.x \n                self.choppedCheese.y = self.cheese.y\n                self.chopping = False\n                self.choppingTimer = 0\n                self.cheese.x = -1000\n                self.cheese.y = -1000\n\n            if self.chosen == self.choppedTomato:\n                self.arrow.visible = False\n                self.ranger.visible = False\n                self.choppedTomato.visible = True\n                self.choppedTomato.x = self.tomato.x \n                self.choppedTomato.y = self.tomato.y\n                self.chopping = False\n                self.choppingTimer = 0\n                self.tomato.x = -1000\n                self.tomato.y = -1000\n        else:\n            if get_collision(self.cheese, self.board):\n                self.cheese.x = -500\n                self.cheese.y = 0\n                self.choppedCheese.x = -1000\n                self.choppedCheese.y = -1000\n\n                self.chopping = False\n                self.arrow.visible = False\n                self.ranger.visible = False\n                self.choppingTimer = 0\n\n            if get_collision(self.tomato, self.board):\n                self.tomato.x = -500\n                self.tomato.y = 100\n                self.choppedTomato.x = -1000\n                self.choppedTomato.y = -1000\n\n                self.chopping = False\n                self.arrow.visible = False\n                self.ranger.visible = False\n                self.choppingTimer = 0\n\nif self.cooking:\n    self.cookingDisplay.visible = True\n    self.cookingTimer += 1\n\n    if self.cookingTimer >= 1000:\n        self.cookingDisplay.sprite = sprite(\"pattyDone.png\")\n        self.patty.sprite = sprite(\"patty.png\")\n\n    if self.cookingTimer >= 1500:\n        self.cookingDisplay.sprite = sprite(\"pattyLate.png\")\n        self.patty.sprite = sprite(\"pattyBurnt.png\")\n\nif mouse_was_pressed(\"left\"):\n    if get_collision(self.recipe, \"Pointer\") or get_collision(self.recipe, \"Detector\"):\n        self.chef.recipe = True\n        self.burgerRecipe.visible = True\n        self.cancel.visible = True\n\n        self.expand = True\n\n    if get_collision(self.cancel, \"Pointer\"):\n        self.burgerRecipe.scaleX = 0\n        self.burgerRecipe.scaleY = 0  \n        self.expand = False      \n        self.burgerRecipe.visible = False\n        self.cancel.visible = False\n        self.chef.recipe = False\n\n    for ingredient in self.ingredients:\n        if get_collision(self.detector, ingredient[\"item\"]) and not ingredient[\"pickUp\"] and not get_collision(ingredient[\"item\"], self.plate):\n            if (ingredient[\"item\"] != self.patty or (ingredient[\"item\"] == self.patty and not self.cooking)) and (ingredient[\"item\"] != self.tomato or (ingredient[\"item\"] == self.tomato and not self.chopping)) and (ingredient[\"item\"] != self.cheese or (ingredient[\"item\"] == self.cheese and not self.chopping)):\n                ingredient[\"pickUp\"] = True\n                ingredient[\"item\"].z = 1\n\n        if ingredient[\"putDown\"]:\n            ingredient[\"item\"].x = self.detector.x \n            ingredient[\"item\"].y = self.detector.y \n            ingredient[\"pickUp\"] = False\n            ingredient[\"putDown\"] = False\n            ingredient[\"item\"].z = -1\n\n            if get_collision(ingredient[\"item\"], self.plate):\n                ingredient[\"item\"].x = self.plate.x\n                ingredient[\"item\"].y = self.plate.y + (len(self.order) * 20) - 10\n\n                self.order.append(ingredient[\"item\"])\n\n    if get_collision(self.cheese, self.board):\n        self.cheese.x = self.board.x \n        self.cheese.y = self.board.y\n        self.chosen = self.choppedCheese\n        self.chopping = True\n\n    if get_collision(self.tomato, self.board):\n        self.tomato.x = self.board.x \n        self.tomato.y = self.board.y\n        self.chosen = self.choppedTomato\n        self.chopping = True\n\n    if get_collision(self.patty, self.stove):\n        self.patty.x = self.stove.x \n        self.patty.y = self.stove.y\n        self.cooking = True\n\n    if self.cooking: \n        if get_collision(self.patty, self.detector):\n            if (self.cookingTimer >= 10 and self.cookingTimer < 1000) or (self.cookingTimer > 1500):\n                self.patty.x = -500\n                self.patty.y = -100\n                self.cookedPatty.x = -1000\n                self.cookedPatty.y = -1000\n\n                self.cookingTimer = 0\n                self.cooking = False\n                self.cookingDisplay.sprite = sprite(\"pattyEarly.png\")\n                self.patty.sprite = sprite(\"pattyRaw.png\")\n                self.cookingDisplay.visible = False\n\n            if self.cookingTimer >= 1000 and self.cookingTimer <= 1500:\n                self.cookingDisplay.visible = False\n                self.cookedPatty.visible = True\n                self.cookedPatty.x = self.patty.x \n                self.cookedPatty.y = self.patty.y\n                self.cooking = False\n                self.cookingTimer = 0\n                self.patty.x = -1000\n                self.patty.y = -1000\n\nfor ingredient in self.ingredients:\n    if ingredient[\"pickUp\"]:\n        ingredient[\"putDown\"] = True\n        ingredient[\"item\"].x = self.chef.x\n        ingredient[\"item\"].y = self.chef.y \n\nif self.expand:\n    self.burgerRecipe.scaleX += 0.02 \n    self.burgerRecipe.scaleY += 0.02\n\n    if self.burgerRecipe.scaleX >= 0.5:\n        self.burgerRecipe.scaleX = 0.5\n\n    if self.burgerRecipe.scaleY >= 0.5:\n        self.burgerRecipe.scaleY = 0.5\n\nif self.timer <= 0:\n    self.chef.died = True\n\nif len(self.order) >= 2:\n    self.enemy.speed = 9\nif len(self.order) >= 4:\n    self.enemy.speed = 12\n\nif len(self.order) >= 6:\n    if self.order == self.order1:\n        self.burger.visible = True\n\n        if self.placed:\n            self.burger.x = self.plate.x \n            self.burger.y = self.plate.y \n            self.placed = False\n\n        self.bottomBun.visible = False\n        self.patty.visible = False\n        self.cookedPatty.visible = False\n        self.cheese.visible = False\n        self.choppedCheese.visible = False\n        self.tomato.visible = False\n        self.choppedTomato.visible = False\n        self.lettuce.visible = False\n        self.topBun.visible = False\n\n        self.win = True\n\n    elif self.order != self.order1: \n        self.bottomBun.x = -500\n        self.patty.x = -500\n        self.cookedPatty.x = -500\n        self.cheese.x = -500\n        self.choppedCheese.x = -1000\n        self.tomato.x = -500\n        self.choppedTomato.x = -1000\n        self.lettuce.x = -500\n        self.topBun.x = -500\n\n        self.bottomBun.y = -200\n        self.cookedPatty.x = -500\n        self.patty.y = -100\n        self.cheese.y = 0\n        self.choppedCheese.y = -1000\n        self.tomato.y = 100\n        self.choppedTomato.y = -1000\n        self.lettuce.y = 200\n        self.topBun.y = 300\n        \n        self.order = []\n        self.wompwomp.visible = True\n\nif self.win:\n    self.burger.scaleX += 0.05\n    self.burger.scaleY += 0.05\n\n    self.burger.x -= 10\n    self.burger.y += 1.2\n\n    if self.burger.scaleX >= 1 and self.burger.scaleY >= 1:\n        self.burger.scaleX = 1\n        self.burger.scaleY = 1\n\n    if self.burger.x <= 0:\n        self.burger.x = 0\n        self.burger.y = 0\n        self.burgerTimer += 1\n\n    if self.burgerTimer >= 200:\n        set_room(\"KitchenWin\")\n\nif self.chef.died: \n    self.chef.timer += 1\n\n    if self.chef.timer >= 0 and self.chef.timer <= 1:\n        self.chef.visible = False\n        explode = Explosion()\n        explode.x = self.chef.x \n        explode.y = self.chef.y\n\n    if self.chef.timer >= 40:\n        self.chef.timer = 0\n        set_room(\"KitchenLose\")"}},{"KitchenLose":{"type":"room script","start":"#Kitchen start\n\nset_camera(0,0)\nself.pointer = Pointer()\n\nself.bg = Bg()\n\nlose = sprite(\"lose.png\", 1, 2)\nself.bg.lose = new_animation(lose, 3, 0, 1)\nset_animation(self.bg, self.bg.lose)\n\nself.bg.scaleX = 0.7\nself.bg.scaleY = 0.7\nself.bg.y = -100\n\nself.btn = Btn()\nself.btn.refundbtn = True\nself.btn.sprite = sprite(\"refundBtn.png\")\nself.btn.x = -100\n\nself.skip = False","loop":"#KitchenLose loop\n\nif mouse_was_pressed(\"left\") and get_collision(self.btn, \"Pointer\"):\n    self.skip = True\n\nif self.skip:\n    self.btn.alpha -= 0.05\n    self.pointer.alpha -= 0.05\n    self.bg.alpha -= 0.05\n\n    if self.btn.alpha <= 0:\n        set_room(\"Kitchen\")"}},{"KitchenWin":{"type":"room script","start":"#KitchenWin start\n\nset_camera(0,0)\nself.pointer = Pointer()\n\nself.bg = Bg()\n\nwin = sprite(\"win.png\", 1, 2)\nself.bg.win = new_animation(win, 3, 0, 1)\nset_animation(self.bg, self.bg.win)\n\nself.bg.scaleX = 0.7\nself.bg.scaleY = 0.7\n\nself.pointer = Pointer()\nself.btn = Btn()\nself.btn.nextbtn = True\nself.btn.sprite = sprite(\"nextBtn.png\")\nself.btn.x = -500\nself.btn.y = -270\n\nself.skip = False","loop":"#KitchenWin loop\n\nif mouse_was_pressed(\"left\") and get_collision(self.btn, \"Pointer\"):\n    self.skip = True\n\nif self.skip:\n    self.btn.alpha -= 0.01\n    self.bg.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.btn.alpha <= 0:\n        set_room(\"Menu2\")"}}]},{"StoreLevel2":[{"StoreOrder":{"type":"room script","start":"#StoreDialogue start\n\n#KitchenOrder start\n\nself.pointer = Pointer()\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"titleBg.png\")\n\nself.clicked = False\nself.skip = False\n\nself.cookbtn = Btn()\nself.cookbtn.x = 450\nself.cookbtn.y = -250\nself.cookbtn.cookbtn = True\nself.cookbtn.sprite = sprite(\"cookBtn.png\")\n\nself.cutscene = 0\nself.timer = 0\nself.nextTimer = 0\n","loop":"#StoreDialogue loop\n\n#KitchenOrder loop\n\n#Level1Earth loop\n\nnextbtn = get_collision(self.cookbtn, \"Pointer\")\n\n# cutscene dict\ncutscenes = {\n    1: \"nextBg.png\", \n    2: \"titleBg.png\"\n}\n\nself.cookbtn.done = False\n\n# click btn triggers next cutscene \nif mouse_was_pressed('left') and nextbtn:\n    if not self.cookbtn.done:\n        self.cutscene += 1\n        self.clicked = True\n\nif self.cutscene in cutscenes:\n    self.bg.sprite = sprite(cutscenes[self.cutscene]) \n\n# cutscene end triggers level1 \nif self.cutscene == 3: \n    self.skip = True\n\nif self.skip:\n    self.bg.alpha -= 0.01\n    self.cookbtn.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.bg.alpha <= 0:\n        set_room(\"Store\")\n\n\n\n"}},{"Store":{"type":"room script","start":"#Level1 start\nself.camera = SmoothCamera()\n\nfor j in range(10):\n    for i in range(10):\n        floor = Floor()\n        floor.sprite = sprite(\"restoEmpty.png\")\n        floor.y = i * 980 - 400\n        floor.x = j * 1400 - 600\n\nfloor = Floor()\nfloor.sprite = sprite(\"restoEmpty.png\")\nfloor.y = 2100\nfloor.x = 0\n\nfloor = Floor()\nfloor.z = 0\nfloor.y = 1840\nfloor.x = -60\nfloor.scaleX = 0.73\n\nfor i in range(3):\n    floor = Floor()\n    floor.z = 0\n    floor.y = i * 790 + 150\n    floor.x = -60\n    floor.scaleX = 0.73\n\n\nbottom = Wall()\nbottom.z = 0\nbottom.scaleX = 1\nbottom.y = -250\n\ntop = Wall()\ntop.y = 2270\ntop.x = -40\ntop.scaleX = 1\ntop.z = 0\n\nleft = Wall()\nleft.angle = 90\nleft.scaleX = 1.8\nleft.x = -700\nleft.y = 1140\nleft.z = 0\n\nright = Wall()\nright.angle = 90\nright.scaleX = 2\nright.x = 620\nright.y = 1000\nright.z = 0\n\nfor i in range(5):\n    obstacle = Aisle()\n    obstacle.y = i * 450 + 50\n\nfor i in range(3):\n    obstacle = Aisle()\n    obstacle.y = i * 550 + 300\n    obstacle.x = -470\n    obstacle.angle = -90\n\nfor i in range(3):\n    obstacle = Aisle()\n    obstacle.y = i * 550 + 300\n    obstacle.x = 360\n    obstacle.angle = 90\n\nCheckout()\n\nself.counter = 0\n\nfor i in range(56):\n    food = Ingredient()\n    sprite_number = (i % 7) + 1\n    food.spriteChoice = sprite_number\n\n    food.sprite = sprite(food.spriteDict[sprite_number])\n    food.x = i * 20 - 600\n\nfor i in range(5):\n    enemy = Cart()\n    enemy.y = 200 + i * 450\n\n# spoon\nself.throwSpoon = False\nself.retrieveSpoon = False\nself.direction = 0\n\ninstructions = new_text(\"\\n\\nPAY CLOSE ATTENTION... GATHER ALL INGREDIENTS!\\nClick to throw spoon & temporarily stun enemies!\", -630, -60)\ninstructions.fontFamily = \"monospace\"\n\nself.chef = Player()\nself.chef.y = -100\n\nself.order = OrderBox()\n\nself.timer = 0","loop":"#Level1 loop\n\nretrieve = get_collision(self.chef, \"Spoon\")\ncollect = get_collision(self.chef, \"Ingredient\")\nscan = get_collision(self.chef, \"Checkout\")\n\nself.order.x = self.camera.x + 500\nself.order.y = self.camera.y + 50\n\nself.camera.x += (self.chef.x - self.camera.x) * 0.05\nself.camera.y += (self.chef.y - self.camera.y) * 0.05\n\nif self.camera.x >= 500:\n    self.camera.x = 500\nif self.camera.x <= -640:\n    self.camera.x = -640\n\nif self.camera.y <= -80:\n    self.camera.y = -80\nif self.camera.y >= 2100:\n    self.camera.y = 2100\n\nset_camera(self.camera.x, self.camera.y)\n\nif not self.chef.quiz:\n    if mouse_was_pressed(\"left\"):\n        if not self.throwSpoon:\n            self.spoon = Spoon()\n            self.spoon.x = self.chef.x\n            self.spoon.y = self.chef.y\n\n            # throws right\n            if self.chef.facingRight:\n                self.direction = 1\n            # throws left\n            elif self.chef.facingLeft:\n                self.direction = -1\n            # throws up\n            elif self.chef.facingUp:\n                self.direction = 2\n            # throws down\n            elif self.chef.facingDown:\n                self.direction = -2\n\n            self.throwSpoon = True\n\n    if self.throwSpoon:\n        # throws spoon\n        if not self.retrieveSpoon:\n            self.spoon.distance += 10\n\n            # right\n            if self.direction == 1:\n                self.spoon.x += 10\n                self.spoon.angle -= 20\n            # left\n            elif self.direction == -1:\n                self.spoon.x -= 10\n                self.spoon.angle += 20\n            # up\n            elif self.direction == 2:\n                self.spoon.y += 10\n                self.spoon.angle += 20\n            # down\n            elif self.direction == -2:\n                self.spoon.y -= 10\n                self.spoon.angle += 20\n        \n        # retrieves spoon after certain distance \n        if self.spoon.distance >= 400 or get_collision(self.spoon, \"Wall\"):\n            self.retrieveSpoon = True\n\n        if self.retrieveSpoon:\n            self.spoon.distance -= 10\n\n            # right \n            if self.direction == 1:\n                self.spoon.x -= 10\n                self.spoon.angle += 20\n\n                # if player jumps/falls\n                if self.chef.y >= self.spoon.y:\n                    self.spoon.y += 10\n                if self.chef.y <= self.spoon.y:\n                    self.spoon.y -= 10\n            \n            # left\n            elif self.direction == -1:\n                self.spoon.x += 10\n                self.spoon.angle -= 20\n\n                # if player jumps/falls\n                if self.chef.y >= self.spoon.y:\n                    self.spoon.y += 10\n                if self.chef.y <= self.spoon.y:\n                    self.spoon.y -= 10\n\n            # up \n            elif self.direction == 2:\n                self.spoon.y -= 10\n                self.spoon.angle += 20\n\n                # if player jumps/falls\n                if self.chef.x >= self.spoon.x:\n                    self.spoon.x += 10\n                if self.chef.x <= self.spoon.x:\n                    self.spoon.x -= 10\n            \n            # down\n            elif self.direction == -2:\n                self.spoon.y += 10\n                self.spoon.angle -= 20\n\n                # if player jumps/falls\n                if self.chef.x >= self.spoon.x:\n                    self.spoon.x += 10\n                if self.chef.x <= self.spoon.x:\n                    self.spoon.x -= 10\n\n            # destroys spoon/chef collects it\n            if retrieve:\n                destroy(self.spoon)\n                self.throwSpoon = False\n                self.retrieveSpoon = False\n\n            # failsafe, destroys spoon if it doesnt reach chef during retrieval\n            elif (self.spoon.x <= self.chef.x and self.direction == 1) or (self.spoon.x >= self.chef.x and self.direction == -1) or (self.spoon.y <= self.chef.y and self.direction == 2) or (self.spoon.y >= self.chef.y and self.direction == -2):\n                if self.spoon.distance <= 0:\n                    destroy(self.spoon)\n                    self.throwSpoon = False\n                    self.retrieveSpoon = False\n\n# collision with ingredient\nif collect:\n    # checks if there's sprite and if it's been collected\n    if collect.spriteChoice == 1 and not collect.collected:\n        # checks if player gained all \n        if self.order.items[\"rocks\"] < self.order.amounts[\"rocks\"]:\n            # addings to shopping list array\n            self.order.items[\"rocks\"] += 1  \n            # collected and fades away\n            collect.collected = True\n            collect.died = True\n\n            # adds to shopping list display\n            self.order.itemsText = \"\"\n            for item in self.order.items:\n                self.order.itemsText += str(self.order.items[item]) + \"\\n\\n\"\n            self.order.ingredients.text = self.order.itemsText\n\n    if collect.spriteChoice == 2 and not collect.collected:\n        # checks if player gained all \n        if self.order.items[\"scales\"] < self.order.amounts[\"scales\"]:\n            # addings to shopping list array\n            self.order.items[\"scales\"] += 1  \n            # collected and fades away\n            collect.collected = True\n            collect.died = True\n\n            # adds to shopping list display\n            self.order.itemsText = \"\"\n            for item in self.order.items:\n                self.order.itemsText += str(self.order.items[item]) + \"\\n\\n\"\n            self.order.ingredients.text = self.order.itemsText\n\n    if collect.spriteChoice == 3 and not collect.collected:\n        # checks if player gained all \n        if self.order.items[\"bowls\"] < self.order.amounts[\"bowls\"]:\n            # addings to shopping list array\n            self.order.items[\"bowls\"] += 1  \n            # collected and fades away\n            collect.collected = True\n            collect.died = True\n\n            # adds to shopping list display\n            self.order.itemsText = \"\"\n            for item in self.order.items:\n                self.order.itemsText += str(self.order.items[item]) + \"\\n\\n\"\n            self.order.ingredients.text = self.order.itemsText\n\n    if collect.spriteChoice == 4 and not collect.collected:\n        # checks if player gained all \n        if self.order.items[\"fishes\"] < self.order.amounts[\"fishes\"]:\n            # addings to shopping list array\n            self.order.items[\"fishes\"] += 1  \n            # collected and fades away\n            collect.collected = True\n            collect.died = True\n\n            # adds to shopping list display\n            self.order.itemsText = \"\"\n            for item in self.order.items:\n                self.order.itemsText += str(self.order.items[item]) + \"\\n\\n\"\n            self.order.ingredients.text = self.order.itemsText\n\n    if collect.spriteChoice == 5 and not collect.collected:\n        # checks if player gained all \n        if self.order.items[\"hammers\"] < self.order.amounts[\"hammers\"]:\n            # addings to shopping list array\n            self.order.items[\"hammers\"] += 1  \n            # collected and fades away\n            collect.collected = True\n            collect.died = True\n\n            # adds to shopping list display\n            self.order.itemsText = \"\"\n            for item in self.order.items:\n                self.order.itemsText += str(self.order.items[item]) + \"\\n\\n\"\n            self.order.ingredients.text = self.order.itemsText\n\n    if collect.spriteChoice == 6 and not collect.collected:\n        # checks if player gained all \n        if self.order.items[\"flames\"] < self.order.amounts[\"flames\"]:\n            # addings to shopping list array\n            self.order.items[\"flames\"] += 1  \n            # collected and fades away\n            collect.collected = True\n            collect.died = True\n\n            # adds to shopping list display\n            self.order.itemsText = \"\"\n            for item in self.order.items:\n                self.order.itemsText += str(self.order.items[item]) + \"\\n\\n\"\n            self.order.ingredients.text = self.order.itemsText\n\n    if collect.spriteChoice == 7 and not collect.collected:\n        # checks if player gained all \n        if self.order.items[\"ice\"] < self.order.amounts[\"ice\"]:\n            # addings to shopping list array\n            self.order.items[\"ice\"] += 1  \n            # collected and fades away\n            collect.collected = True\n            collect.died = True\n\n            # adds to shopping list display\n            self.order.itemsText = \"\"\n            for item in self.order.items:\n                self.order.itemsText += str(self.order.items[item]) + \"\\n\\n\"\n            self.order.ingredients.text = self.order.itemsText\n\nif not self.chef.quiz:\n    if self.order.items == self.order.amounts:\n        self.order.instructions.visible = False\n        self.order.ingredients.visible = False\n        self.order.display.visible = True\n        self.order.checkout = True\n        self.order.scaleY -= 0.005\n\n    if self.order.scaleY <= 0.1:\n        self.order.scaleY = 0.1\n\nif scan and self.order.checkout:\n    self.chef.x = -555\n    self.chef.y = -90\n    self.chef.sprite = sprite(\"chefFrontIdle.png\")\n\n    self.order.scaleY = 0.5\n    self.order.instructions.text = \"Wait..how many\\nwas it again?\\n\\n\\n? rocks\\n\\n? scales\\n\\n? bowls\\n\\n? fishes\\n\\n? hammers\\n\\n? flames\\n\\n? ice\"\n    self.order.itemsText = \"\"\n    self.order.display.visible = False\n    self.order.ingredients.visible = False\n    self.order.instructions.visible = True\n    \n    self.order.checkout = False\n    self.chef.quiz = True\n\nif self.chef.quiz and not self.chef.died:\n    self.timer += 1\n\n    if self.timer >= 100:\n        testDict = {}\n\n        for item in self.order.items:\n            answer = input(\"(INPUT DIGIT ONLY ex. 9)\\nHow many \" + item + \" did you collect?\")\n            self.order.itemsText += answer + \"\\n\\n\"\n            testDict.update({item: int(answer)})\n\n        # Compare answers\n        if testDict == self.order.amounts:\n            self.chef.quiz = False        \n            set_room(\"StoreWin\")\n        else:\n            self.chef.quiz = False        \n            self.chef.died = True\n\n        self.timer = 0\n\nif self.chef.died: \n    self.chef.timer += 1\n\n    if self.chef.timer >= 0 and self.chef.timer <= 1:\n        self.chef.visible = False\n        explode = Explosion()\n        explode.x = self.chef.x \n        explode.y = self.chef.y\n\n    if self.chef.timer >= 40:\n        self.chef.timer = 0\n        set_room(\"StoreLose\")\n"}},{"StoreLose":{"type":"room script","start":"#Level1Lost start\n\n#Kitchen start\n\nset_camera(0,0)\nself.pointer = Pointer()\n\nself.bg = Bg()\n\nlose = sprite(\"lose.png\", 1, 2)\nself.bg.lose = new_animation(lose, 3, 0, 1)\nset_animation(self.bg, self.bg.lose)\n\nself.bg.scaleX = 0.7\nself.bg.scaleY = 0.7\nself.bg.y = -100\n\n\nself.btn = Btn()\nself.btn.refundbtn = True\nself.btn.sprite = sprite(\"refundBtn.png\")\nself.btn.x = -100\n\nself.skip = False","loop":"#Level1Lost loop\n\nif mouse_was_pressed(\"left\") and get_collision(self.btn, \"Pointer\"):\n    self.skip = True\n\nif self.skip:\n    self.btn.alpha -= 0.05\n    self.pointer.alpha -= 0.05\n    self.bg.alpha -= 0.05\n\n    if self.btn.alpha <= 0:\n        set_room(\"Store\")"}},{"StoreWin":{"type":"room script","start":"#KitchenWin start\n\nset_camera(0,0)\nself.pointer = Pointer()\n\nself.bg = Bg()\n\nwin = sprite(\"win.png\", 1, 2)\nself.bg.win = new_animation(win, 3, 0, 1)\nset_animation(self.bg, self.bg.win)\n\nself.bg.scaleX = 0.7\nself.bg.scaleY = 0.7\n\nself.pointer = Pointer()\nself.btn = Btn()\nself.btn.nextbtn = True\nself.btn.sprite = sprite(\"nextBtn.png\")\nself.btn.x = -500\nself.btn.y = -270\n\nself.skip = False","loop":"#KitchenWin loop\n\nif mouse_was_pressed(\"left\") and get_collision(self.btn, \"Pointer\"):\n    self.skip = True\n\nif self.skip:\n    self.btn.alpha -= 0.01\n    self.bg.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.btn.alpha <= 0:\n        set_room(\"Menu3\")"}}]},{"DinnerBoss":[{"DinnerOrder":{"type":"room script","start":"#DinnerOrder start\n\n#KitchenOrder start\n\nself.pointer = Pointer()\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"titleBg.png\")\n\nself.clicked = False\nself.skip = False\n\nself.cookbtn = Btn()\nself.cookbtn.x = 450\nself.cookbtn.y = -250\nself.cookbtn.cookbtn = True\nself.cookbtn.sprite = sprite(\"cookBtn.png\")\n\nself.cutscene = 0\nself.timer = 0\nself.nextTimer = 0\n","loop":"#DinnerOrder loop\n\n#KitchenOrder loop\n\n#Level1Earth loop\n\nnextbtn = get_collision(self.cookbtn, \"Pointer\")\n\n# cutscene dict\ncutscenes = {\n    1: \"nextBg.png\", \n    2: \"titleBg.png\"\n}\n\nself.cookbtn.done = False\n\n# click btn triggers next cutscene \nif mouse_was_pressed('left') and nextbtn:\n    if not self.cookbtn.done:\n        self.cutscene += 1\n        self.clicked = True\n\nif self.cutscene in cutscenes:\n    self.bg.sprite = sprite(cutscenes[self.cutscene]) \n\n# cutscene end triggers level1 \nif self.cutscene == 3: \n    self.skip = True\n\nif self.skip:\n    self.bg.alpha -= 0.01\n    self.cookbtn.alpha -= 0.01\n    self.pointer.alpha -= 0.01\n\n    if self.bg.alpha <= 0:\n        set_room(\"Dinner\")\n\n\n\n"}},{"Dinner":{"type":"room script","start":"#Dinner start\n\n#Lab start\n\n# randomizes the sprites\nimport random \n\nfoodSprites = {\n    1: \"rocks.png\",\n    2: \"scales.png\",\n    3: \"hammers.png\",\n    4: \"Placement.png\"\n}\n\nself.bg = Bg()\nself.bg.sprite = sprite(\"nextBg.png\")\ngame.mouse1 = StrictPointer()\ngame.mouse = Pointer()\n\nfor i in range(10):\n    randomSprite = random.randint(1, 3)\n    food = Food()\n    food.sprite = sprite(foodSprites[randomSprite])\n    food.move1 = True\n    food.move2 = False\n    food.move3 = False\n    food.x = i * random.randint(450, 500) - 6000\n    food.speed = 5\n\nself.trigger = TriggerFood()\nself.trigger.click = False \n\nself.quiz = Quiz()\nself.quiz.visible = False \n\nself.button1 = Buttons1()\nself.button2 = Buttons2()\nself.button3 = Buttons3()\nself.button4 = Buttons4()\nself.button1.visible = False\nself.button2.visible = False\nself.button3.visible = False\nself.button4.visible = False\n\nfor i in range(15):\n    randomSprite = random.randint(1, 4)\n    food = Food()\n    food.sprite = sprite(foodSprites[randomSprite])\n    food.move1 = False\n    food.move2 = False\n    food.move3 = False \n    food.rounds = 2\n    food.x = i * random.randint(550, 600) - 12000\n    food.speed = 9\n\n    if get_collision(self, \"Food\"):\n        food.x -= 100\n\n\nself.trigger1 = TriggerFood()\nself.trigger1.x = -15000\nself.trigger1.click = False \nself.trigger1.move = False\nself.trigger1.move1 = False\nself.trigger1.move2 = False\n\nself.quiz1 = Quiz()\nself.quiz1.visible = False \n\nself.button5 = Buttons5()\nself.button6 = Buttons6()\nself.button7 = Buttons7()\nself.button8 = Buttons8()\nself.button5.visible = False\nself.button6.visible = False\nself.button7.visible = False\nself.button8.visible = False\n\nfor i in range(20):\n    randomSprite = random.randint(1, 4)\n    food = Food()\n    food.sprite = sprite(foodSprites[randomSprite])\n    food.move1 = False\n    food.move2 = False\n    food.move3 = False\n    food.rounds = 3\n    food.speed = 12\n    food.x = i * random.randint(650, 700) - 20000\n    if get_collision(self, \"Food\"):\n        food.x -= 100\n\nself.trigger2 = TriggerFood()\nself.trigger2.x = -49000\nself.trigger2.click = False \nself.trigger1.move = False\nself.trigger2.move1 = False\nself.trigger1.move2 = False\n\nself.quiz2 = Quiz()\nself.quiz2.visible = False \n\nself.button9 = Buttons9()\nself.button10 = Buttons10()\nself.button11 = Buttons11()\nself.button12 = Buttons12()\nself.button9.visible = False\nself.button10.visible = False\nself.button11.visible = False\nself.button12.visible = False\n\nself.end = False\n\n","loop":"#Dinner loop\n\n#Lab loop\n\nchopped = get_collision(game.mouse1, \"Food\")\n\n# chops the food\nif key_was_pressed(\" \") and chopped:\n    if chopped.sprite == sprite(\"Placement.png\"):\n        set_room(\"DinnerLose\")\n\n    chopped.sprite = sprite(\"enemy.png\")\n    chopped.clicked = True\n\n# triggers quiz\nif key_was_pressed(\" \") and get_collision(game.mouse1, self.trigger):\n    self.trigger.click = True\n    self.quiz.visible = True\n    self.button1.visible = True\n    self.button2.visible = True\n    self.button3.visible = True\n    self.button4.visible = True \n\n# miss quiz code \nif self.trigger.x >= 750 and self.trigger.click == False:\n    set_room(\"DinnerLose\")\n\n# press button\nif mouse_was_pressed(\"left\"):\n    if self.button1.visible and get_collision(game.mouse, 'Buttons1'):\n        set_room(\"DinnerLose\")\n    elif self.button2.visible and get_collision(game.mouse, 'Buttons2'):\n        set_room(\"DinnerLose\")\n    elif self.button4.visible and get_collision(game.mouse, 'Buttons4'):\n        set_room(\"DinnerLose\")\n    elif self.button3.visible and get_collision(game.mouse, 'Buttons3'):\n        # Correct answer, hide second quiz and buttons\n        self.quiz.visible = False\n        self.button1.visible = False\n        self.button2.visible = False\n        self.button4.visible = False\n        self.trigger1.move1 = True\n\n# quiz 2 \n\nif key_was_pressed(\" \") and get_collision(game.mouse1, self.trigger1):\n    self.trigger1.sprite = sprite(\"enemy.png\")\n    self.trigger1.click = True\n    self.quiz1.visible = True\n    self.button5.visible = True\n    self.button6.visible = True\n    self.button7.visible = True\n    self.button8.visible = True \n\n# quiz 2 \nif self.trigger1.x >= 750 and self.trigger1.click == False:\n    set_room(\"DinnerLose\")\n\n# Check for button clicks for second quiz\nif mouse_was_pressed(\"left\"):\n    if self.button5.visible and get_collision(game.mouse, 'Buttons5'):\n        set_room(\"DinnerLose\")\n    elif self.button7.visible and get_collision(game.mouse, 'Buttons7'):\n        set_room(\"DinnerLose\")\n    elif self.button8.visible and get_collision(game.mouse, 'Buttons8'):\n        set_room(\"DinnerLose\")\n    elif self.button6.visible and get_collision(game.mouse, 'Buttons6'):\n        # Correct answer, hide second quiz and buttons\n        self.quiz1.visible = False\n        self.button5.visible = False\n        self.button7.visible = False\n        self.button8.visible = False\n        self.trigger2.move2 = True\n\nif key_was_pressed(\" \") and get_collision(game.mouse1, self.trigger2):\n    self.trigger2.sprite = sprite(\"enemy.png\")\n    self.trigger2.click = True\n    self.quiz2.visible = True\n    self.button9.visible = True\n    self.button10.visible = True\n    self.button11.visible = True\n    self.button12.visible = True \n\n# quiz 2 \nif self.trigger2.x >= 750 and self.trigger2.click == False:\n    set_room(\"DinnerLose\")\n\n# Check for button clicks for second quiz\nif mouse_was_pressed(\"left\"):\n    if self.button9.visible and get_collision(game.mouse, 'Buttons9'):\n        set_room(\"DinnerLose\")\n    elif self.button10.visible and get_collision(game.mouse, 'Buttons10'):\n        set_room(\"DinnerLose\")\n    elif self.button11.visible and get_collision(game.mouse, 'Buttons11'):\n        set_room(\"DinnerLose\")\n    elif self.button12.visible and get_collision(game.mouse, 'Buttons12'):\n        self.end = True\n\nif self.end:\n    move_camera(0, 10)\n\n    if camera_y() >= 1000:\n        set_room(\"EndScenes\")\n\n"}},{"DinnerLose":{"type":"room script","start":"#Dinner start\n\nset_camera(0,0)\nself.pointer = Pointer()\n\nself.bg = Bg()\n\nlose = sprite(\"lose.png\", 1, 2)\nself.bg.lose = new_animation(lose, 3, 0, 1)\nset_animation(self.bg, self.bg.lose)\n\nself.bg.scaleX = 0.7\nself.bg.scaleY = 0.7\nself.bg.y = -100\n\n\nself.btn = Btn()\nself.btn.refundbtn = True\nself.btn.sprite = sprite(\"refundBtn.png\")\nself.btn.x = -100\n\nself.skip = False","loop":"#DinnerLose loop\n\nif mouse_was_pressed(\"left\") and get_collision(self.btn, \"Pointer\"):\n    self.skip = True\n\nif self.skip:\n    self.btn.alpha -= 0.05\n    self.pointer.alpha -= 0.05\n    self.bg.alpha -= 0.05\n\n    if self.btn.alpha <= 0:\n        set_room(\"Dinner\")"}}]}],"texture":[{"StoreDone":[{"fish.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834709.fish.png"}},{"scale.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834720.scale.png"}},{"ice.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716844192.ice.png"}},{"hammer.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834741.hammer.png"}},{"rock.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834751.rock.png"}},{"bowl.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834762.bowl.png"}},{"flame.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834776.flame.png"}},{"spoon.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716844032.spoon.png"}},{"groceryFloor.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834542.groceryFloor.png"}},{"groceryWall1.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834555.groceryWall1.png"}},{"groceryWall2.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834568.groceryWall2.png"}},{"groceryWall3.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834581.groceryWall3.png"}},{"groceryWall4.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834594.groceryWall4.png"}},{"groceryWall5.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834610.groceryWall5.png"}},{"shoppingList.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835149.shoppingList.png"}},{"groceryBorder.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835188.groceryBorder.png"}},{"enemyMoving.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716849578.enemyMoving.png"}},{"checkout.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716844543.checkout.png"}}]},{"KitchenDone":[{"bottomBun.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834822.bottomBun.png"}},{"pattyRaw.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834835.pattyRaw.png"}},{"patty.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834869.patty.png"}},{"pattyBurnt.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834927.pattyBurnt.png"}},{"cheese.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834938.cheese.png"}},{"cheeseSliced.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834950.cheeseSliced.png"}},{"tomatoUncut.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835961.tomatoUncut.png"}},{"tomatoSliced.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716836223.tomatoSliced.png"}},{"lettuce.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834972.lettuce.png"}},{"topBun.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834983.topBun.png"}},{"burger.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835001.burger.png"}},{"pattyDone.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835073.pattyDone.png"}},{"pattyEarly.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835084.pattyEarly.png"}},{"pattyLate.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835092.pattyLate.png"}},{"rangeScale.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835061.rangeScale.png"}},{"recipe.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835023.recipe.png"}},{"arrow.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835037.arrow.png"}},{"cancelRecipe.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835134.cancelRecipe.png"}},{"plate.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835161.plate.png"}},{"explosion.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716843699.explosion.png"}},{"highlight.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835111.highlight.png"}},{"recipeTiny.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835175.recipeTiny.png"}}]},{"MainDone":[{"menu.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834416.menu.png"}},{"mizzieMice.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834153.mizzieMice.png"}},{"skipBtn.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834176.skipBtn.png"}},{"skipBtnPressed.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834195.skipBtnPressed.png"}},{"nextBtn.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834220.nextBtn.png"}},{"nextBtnPressed.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834240.nextBtnPressed.png"}},{"startBtn.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834396.startBtn.png"}},{"startBtnPressed.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834380.startBtnPressed.png"}},{"cookBtn.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834309.cookBtn.png"}},{"cookBtnPressed.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834323.cookBtnPressed.png"}},{"refundBtn.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834340.refundBtn.png"}},{"refundBtnPressed.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834353.refundBtnPressed.png"}},{"chefFrontIdle.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834635.chefFrontIdle.png"}},{"chefBackIdle.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834648.chefBackIdle.png"}},{"chefRightIdle.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716834662.chefRightIdle.png"}},{"menuLevel3Hover.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716840454.menuLevel3Hover.png"}},{"menuLevel3.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716837252.menuLevel3.png"}},{"menuLevel2Hover.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716837244.menuLevel2Hover.png"}},{"menuLevel2.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716837235.menuLevel2.png"}},{"menuLevel1Hover.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716837225.menuLevel1Hover.png"}},{"menuLevel1.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716837214.menuLevel1.png"}},{"win.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835539.win.png"}},{"lose.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835546.lose.png"}},{"titleText.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835532.titleText.png"}},{"pointer.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716430295.pointer.png"}},{"restoLevel1.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835211.restoLevel1.png"}},{"restoEmpty.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835201.restoEmpty.png"}}]},{"Main":[{"nextBg.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716503728.nextBg.png"}},{"titleBg.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716430789.titleBg.png"}}]},{"DinnerLevel3":[{"quiz.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716755746.quiz.png"}},{"Placement.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716753194.Placement.png"}},{"Button.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716753164.Button.png"}}]},{"magmaWin.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835222.magmaWin.png"}},{"waterWin.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835230.waterWin.png"}},{"earthWin.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835241.earthWin.png"}},{"airWin.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835250.airWin.png"}},{"enemyIdle.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835269.enemyIdle.png"}},{"quiz1.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835284.quiz1.png"}},{"quiz2.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835291.quiz2.png"}},{"quiz3.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835298.quiz3.png"}},{"button1.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835307.button1.png"}},{"button2.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835315.button2.png"}},{"button3.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835322.button3.png"}},{"button4.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835329.button4.png"}},{"button5.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835397.button5.png"}},{"button6.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835408.button6.png"}},{"button7.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835418.button7.png"}},{"button8.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835429.button8.png"}},{"button9.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835440.button9.png"}},{"button10.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835451.button10.png"}},{"button11.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835460.button11.png"}},{"button12.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835471.button12.png"}},{"shrimp.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835478.shrimp.png"}},{"tomato.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835485.tomato.png"}},{"parsley.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835496.parsley.png"}},{"penne.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835508.penne.png"}},{"spoiled.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835521.spoiled.png"}},{"health3.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835565.health3.png"}},{"health2.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835572.health2.png"}},{"health1.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835579.health1.png"}},{"health0.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716835593.health0.png"}}],"sound":[{"pressed.mp3":{"type":"audio","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.44711.1799371.1716430636.pressed.mp3"}}],"function":[]},"blockAssets":{"script":[{"Game":{"type":"game script","start":{"blocks":{"blocks":[{"type":"start_block","id":"startBlock","x":100,"y":100,"fields":{"NAME":"Game Start"}}]}},"loop":{"blocks":{"blocks":[{"type":"loop_block","id":"loopBlock","x":100,"y":100,"fields":{"NAME":"Game Loop"}}]}}}}],"room":[],"texture":[],"sound":[],"function":[],"gameVars":[]},"projectSettings":{"type":"monaco"}}
